1 2 3 4 5
Preorder:1 2 4 5 3 
Inorder:4 2 5 1 3 
Postorder:4 5 2 3 1 
levelorder:1 2 3 4 5 

import java.util.*;

public class Main {
 
  static void preorder(Node root){
    if(root==null) return;
    System.out.print(root.data+" ");
    preorder(root.left);
    preorder(root.right);
      }
  static void inorder(Node root){
      if(root==null) return;
      inorder(root.left);
      System.out.print(root.data+" ");
      inorder(root.right);
      }
  static void postorder(Node root){
    if(root==null) return;
    postorder(root.left);
    postorder(root.right);
    System.out.print(root.data+" ");
    }
  static void levelorder(Node root){
    Queue<Node> que=new LinkedList<>();
    que.add(root);
    while(!que.isEmpty()){
      Node t=que.poll();
      System.out.print(t.data+" ");
      if(t.left!=null){
        que.add(t.left);
      }
      if(t.right!=null){
        que.add(t.right);
      }
    }
  }
    
    public static void main(String[] args) {
      Scanner sc=new Scanner(System.in);
      String arr[]=sc.nextLine().split(" ");
      Queue<Node> q=new LinkedList<>();
      Node root=new Node(Integer.parseInt(arr[0]));
      q.add(root);
      
      for(int i=1;i<arr.length;i++){
        int v=Integer.parseInt(arr[i]);
        Node t=q.poll();
        if(v!=-1){
          t.left=new Node(v);
          q.add(t.left);
        }
        i++;
           
        v=Integer.parseInt(arr[i]);
        if(v!=-1){
          t.right=new Node(v);
          q.add(t.right);
        }
          
      }
      System.out.print("Preorder:");
      preorder(root);
      System.out.println();
      System.out.print("Inorder:");
      inorder(root);
      System.out.println();
      System.out.print("Postorder:");
      postorder(root);
      System.out.println();
      System.out.print("levelorder:");
      levelorder(root);
      System.out.println();
  }
}
class Node{
  int data;
  Node left,right;
  
  public Node(int val){
    this.data=val;
    left=right=null;
  }
}
